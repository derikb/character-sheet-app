{
  "version": 3,
  "sources": ["../package.json", "../src/service_worker.js"],
  "sourcesContent": ["{\n  \"name\": \"character-sheet-app\",\n  \"version\": \"4.5.3\",\n  \"description\": \"Online character sheet for Tabletop Role-Playing Games\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/derikb/character-sheet-app.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/derikb/character-sheet-app/issues\"\n  },\n  \"homepage\": \"https://github.com/derikb/character-sheet-app#readme\",\n  \"keywords\": [\n    \"d&d\",\n    \"rpg\",\n    \"ttrpg\",\n    \"character sheet\"\n  ],\n  \"author\": \"Derik A Badman\",\n  \"license\": \"GPL-3.0\",\n  \"dependencies\": {\n    \"firebase\": \"^10.1.0\",\n    \"rpg-table-randomizer\": \"^1.3.2\"\n  },\n  \"devDependencies\": {\n    \"@stylistic/eslint-plugin-js\": \"^2.1.0\",\n    \"commit-and-tag-version\": \"^12.0.0\",\n    \"esbuild\": \"^0.21\",\n    \"eslint\": \"^9.4.0\",\n    \"globals\": \"^15.3.0\",\n    \"normalize.css\": \"^8.0.1\"\n  },\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"start\": \"esbuild --serve=8080 --servedir=./dist ./src/styles.css ./src/index.js ./src/service_worker.js --outdir=./dist --loader:.svg=dataurl --loader:.html=file --bundle\",\n    \"build\": \"esbuild ./src/styles.css ./src/index.js ./src/service_worker.js --outdir=./dist --loader:.svg=dataurl --loader:.html=file --minify --sourcemap --bundle\",\n    \"release\": \"commit-and-tag-version -a\",\n    \"eslint\": \"eslint ./src\"\n  },\n  \"commit-and-tag-version\": {\n    \"scripts\": {\n      \"postbump\": \"npm run build && git add ./dist/service_worker.js ./dist/service_worker.js.map ./dist/index.js ./dist/index.js.map ./dist/styles.css ./dist/styles.css.map\"\n    },\n    \"bumpFiles\": [\n      \"package.json\",\n      \"package-lock.json\"\n    ]\n  }\n}\n", "/**\n * Service worker for character sheet app\n */\nimport { version } from '../package.json';\n/**\n * Config data\n * Update cacheName when we want to make sure to get new data in the cache\n * Caching all the files we use except the service worker itself\n */\nconst config = {\n    cacheName: version,\n    staticCacheItems: [\n        '/index.html',\n        '/index.js',\n        '/styles.css',\n        '/'\n    ]\n};\n\n/**\n * Event: install\n * precaches all the files we use in the app\n */\nself.addEventListener('install', (e) => {\n    function onInstall () {\n        return caches.open(config.cacheName)\n            .then(cache => cache.addAll(config.staticCacheItems));\n    }\n    e.waitUntil(\n        onInstall(e)\n            .then(() => self.skipWaiting())\n    );\n});\n/**\n * Event: activate\n * This clears out any old caches\n */\nself.addEventListener('activate', function (event) {\n    const cacheWhitelist = [config.cacheName];\n\n    event.waitUntil(\n        caches.keys().then(function (cacheNames) {\n            return Promise.all(\n                cacheNames.map(function (cacheName) {\n                    if (cacheWhitelist.indexOf(cacheName) === -1) {\n                        return caches.delete(cacheName);\n                    }\n                    return undefined;\n                })\n            );\n        })\n            .then(() => self.clients.claim())\n    );\n});\n/**\n * Event: fetch\n * Just fetches from the cache if it can, since the whole app is static\n * @param {FetchEvent} event\n */\nself.addEventListener('fetch', (event) => {\n    // Ignore POSTs (mostly to external DBs, etc.)\n    if (event.request.method === 'POST') {\n        fetch(event.request);\n        return;\n    }\n    event.respondWith(\n        caches.match(event.request)\n            .then(function (resp) {\n                return resp || fetch(event.request)\n                    .then(function (response) {\n                        return caches.open(config.cacheName)\n                            .then(function (cache) {\n                                cache.put(event.request, response.clone());\n                                return response;\n                            });\n                    });\n            }).catch(function (e) {\n                console.log('Service worker fetch failed.');\n            })\n    );\n});\n"],
  "mappings": "MAEE,IAAAA,EAAW,QCOb,IAAMC,EAAS,CACX,UAAWC,EACX,iBAAkB,CACd,cACA,YACA,cACA,GACJ,CACJ,EAMA,KAAK,iBAAiB,UAAY,GAAM,CACpC,SAASC,GAAa,CAClB,OAAO,OAAO,KAAKF,EAAO,SAAS,EAC9B,KAAKG,GAASA,EAAM,OAAOH,EAAO,gBAAgB,CAAC,CAC5D,CACA,EAAE,UACEE,EAAU,CAAC,EACN,KAAK,IAAM,KAAK,YAAY,CAAC,CACtC,CACJ,CAAC,EAKD,KAAK,iBAAiB,WAAY,SAAUE,EAAO,CAC/C,IAAMC,EAAiB,CAACL,EAAO,SAAS,EAExCI,EAAM,UACF,OAAO,KAAK,EAAE,KAAK,SAAUE,EAAY,CACrC,OAAO,QAAQ,IACXA,EAAW,IAAI,SAAUC,EAAW,CAChC,GAAIF,EAAe,QAAQE,CAAS,IAAM,GACtC,OAAO,OAAO,OAAOA,CAAS,CAGtC,CAAC,CACL,CACJ,CAAC,EACI,KAAK,IAAM,KAAK,QAAQ,MAAM,CAAC,CACxC,CACJ,CAAC,EAMD,KAAK,iBAAiB,QAAUH,GAAU,CAEtC,GAAIA,EAAM,QAAQ,SAAW,OAAQ,CACjC,MAAMA,EAAM,OAAO,EACnB,MACJ,CACAA,EAAM,YACF,OAAO,MAAMA,EAAM,OAAO,EACrB,KAAK,SAAUI,EAAM,CAClB,OAAOA,GAAQ,MAAMJ,EAAM,OAAO,EAC7B,KAAK,SAAUK,EAAU,CACtB,OAAO,OAAO,KAAKT,EAAO,SAAS,EAC9B,KAAK,SAAUG,EAAO,CACnB,OAAAA,EAAM,IAAIC,EAAM,QAASK,EAAS,MAAM,CAAC,EAClCA,CACX,CAAC,CACT,CAAC,CACT,CAAC,EAAE,MAAM,SAAUC,EAAG,CAClB,QAAQ,IAAI,8BAA8B,CAC9C,CAAC,CACT,CACJ,CAAC",
  "names": ["version", "config", "version", "onInstall", "cache", "event", "cacheWhitelist", "cacheNames", "cacheName", "resp", "response", "e"]
}
